{"version":3,"sources":["Components/Filter/Filter.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/Phonebook/Phonebook.js","App.js","reportWebVitals.js","index.js"],"names":["FormItem","styled","label","FormInput","input","FormHeading","h3","Filter","value","onChange","type","ItemWrapper","div","ContactInfo","p","ContactName","span","ContactNumber","DeleteButton","button","ContactListItem","contact","onDeleteContact","name","number","onClick","id","List","ul","ContactList","contacts","map","FormWrapper","form","FormLabel","FormTitle","FormButton","ContactForm","onAddContact","useState","setName","setNumber","changeState","event","currentTarget","reset","onSubmit","preventDefault","pattern","title","required","Wrapper","Heading","h1","SubHeading","h2","Phonebook","data","setContacts","filter","setFilter","normalizedFilter","useMemo","toLowerCase","useEffect","localStorage","getItem","parsedContacts","JSON","parse","window","setItem","stringify","nanoid","find","alert","includes","trim","contactId","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0982f062.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst FormItem = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  font-weight: 600;\r\n  color: black;\r\n`;\r\n\r\nconst FormInput = styled.input`\r\n  width: 200px;\r\n  border-radius: 3px;\r\n  border: solid 2px black;\r\n  margin-bottom: 20px;\r\n\r\n  :focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 1px 1px blue;\r\n    border: solid 1px black;\r\n  }\r\n`;\r\n\r\nconst FormHeading = styled.h3`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <FormItem>\r\n        <FormHeading>Find contacts by name</FormHeading>\r\n        <FormInput\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </FormItem>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ItemWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ContactInfo = styled.p`\r\n  margin-right: 25px;\r\n`;\r\n\r\nconst ContactName = styled.span`\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst ContactNumber = styled.span`\r\n  font-style: italic;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  padding: 2px 4px;\r\n  width: 100px;\r\n\r\n  cursor: pointer;\r\n  color: black;\r\n  border: solid 1px black;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  line-height: 1.475;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  :hover {\r\n    color: white;\r\n    background-color: red;\r\n  }\r\n`;\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact }) => (\r\n    <ItemWrapper>\r\n        <ContactInfo>\r\n            <ContactName>{contact.name}</ContactName>\r\n            <ContactNumber>{contact.number}</ContactNumber>\r\n        </ContactInfo>\r\n        <DeleteButton onClick={() => onDeleteContact(contact.id)}>Delete</DeleteButton>\r\n    </ItemWrapper>\r\n)\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }),\r\n    onDeleteContact:PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst List = styled.ul`\r\n  width: 400px;\r\n`;\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <List>\r\n        {contacts.map(contact => (\r\n            <li key={contact.id}>\r\n                <ContactListItem contact={contact} onDeleteContact={onDeleteContact}/>\r\n            </li>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onDeleteContact:PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst FormWrapper = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 30px 30px;\r\n\r\n  margin-bottom: 20px;\r\n  border: solid 1px black;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FormLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n\r\n  font-weight: 600;\r\n  color: black;\r\n`;\r\n\r\nconst FormTitle = styled.h3`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst FormInput = styled.input`\r\n  border-radius: 3px;\r\n  border: solid 2px black;\r\n  :focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 3px 3px blue;\r\n    border: solid 1px black;\r\n  }\r\n`;\r\n\r\nconst FormButton = styled.button`\r\n  padding: 2px 4px;\r\n  width: 120px;\r\n\r\n  cursor: pointer;\r\n  color: black;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  border: solid 1px black;\r\n  \r\n\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 1.875;\r\n  align-items: center;\r\n  text-align: center;\r\n  \r\n  :hover {\r\n    color: white;\r\n    background-color: lightgreen;\r\n  }\r\n`;\r\n\r\nexport default function ContactForm({onAddContact}) {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const changeState = event => {\r\n      const { name, value } = event.currentTarget;\r\n      switch (name) {\r\n        case 'name':\r\n          setName(value);\r\n          break;\r\n        case 'number':\r\n          setNumber(value);\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n  }\r\n\r\n  const contactSubmit = event => {\r\n    event.preventDefault();\r\n    onAddContact({ name, number });\r\n    reset();\r\n  }\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <FormWrapper onSubmit={contactSubmit}>\r\n        <FormLabel>\r\n            <FormTitle>Name</FormTitle>\r\n            <FormInput\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={changeState}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n            />\r\n        </FormLabel>\r\n        <FormLabel>\r\n            <FormTitle>Number</FormTitle>\r\n            <FormInput\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                onChange={changeState}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n            />\r\n        </FormLabel>\r\n        <FormButton type=\"submit\">Add contact</FormButton>\r\n    </FormWrapper>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n};","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport styled from 'styled-components';\r\nimport data from '../../data/contacts.json';\r\nimport Filter from '../Filter/Filter';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: venter;\r\n  margin-bottom: 30px;\r\n\r\n  :last-child {\r\n    margin-bottom: 0px;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  margin-bottom: 20px;\r\n  font-size: 36px;\r\n  text-align: center;\r\n`;\r\n\r\nconst SubHeading = styled.h2`\r\n  margin-bottom: 20px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n`;\r\n\r\nexport default function Phonebook () {\r\n\r\n    const [contacts, setContacts] = useState(data);\r\n    const [filter, setFilter] = useState('');\r\n\r\n    const addContact = ({ name, number }) => {\r\n        const contact = {\r\n            id: nanoid(),\r\n            name,\r\n            number,\r\n        };\r\n\r\n        if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\r\n            alert(`${name} is already in contacts`);\r\n            return;\r\n        }\r\n\r\n        setContacts([contact, ...contacts]);\r\n    }\r\n\r\n    const deleteContact = contactId => {\r\n        setContacts(\r\n            contacts.filter(contact => contact.id !== contactId),\r\n        )\r\n    }\r\n\r\n    const changeFilter = event => {\r\n        setFilter( event.currentTarget.value )\r\n    }\r\n\r\n    const normalizedFilter = useMemo(() => filter.toLowerCase(), [filter])\r\n\r\n    const getCurrentPhonebook = () => {\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter.trim()));\r\n    }\r\n\r\n    useEffect(() => { \r\n        const contacts = localStorage.getItem('contacts');\r\n        const parsedContacts = JSON.parse(contacts);\r\n        if (parsedContacts) {\r\n        setContacts( parsedContacts );\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem('contacts', JSON.stringify(contacts))\r\n    }, [contacts])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Heading>Phonebook</Heading>\r\n            <ContactForm onAddContact={addContact} />\r\n            <SubHeading>Contacts</SubHeading>\r\n            <Filter value={filter} onChange={changeFilter} />\r\n            <ContactList contacts={getCurrentPhonebook()} onDeleteContact={deleteContact} />\r\n        </Wrapper>\r\n    );\r\n    \r\n}\r\n\r\n","import './App.css';\nimport styled from 'styled-components';\nimport Phonebook from './Components/Phonebook/Phonebook';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 0 15px;\n  width: 430px;\n`;\n\nfunction App() {\n    return (\n      <Container>\n        <Phonebook />\n      </Container>\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n  ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}